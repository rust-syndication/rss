searchState.loadedDescShard("diligent_date_parser", 0, "This is a library to parse dates in unknown format. It …\nISO 8601 combined date and time with time zone.\nThe time zone with fixed offset, from UTC-23:59:59 to …\nThe maximum possible <code>DateTime&lt;Utc&gt;</code>.\nThe minimum possible <code>DateTime&lt;Utc&gt;</code>.\nThe Unix Epoch, 1970-01-01 00:00:00 UTC.\nAdd a duration in <code>Days</code> to the date part of the <code>DateTime</code>.\nAdds given <code>Months</code> to the current date and time.\nAdds given <code>TimeDelta</code> to the current date and time.\nSubtract a duration in <code>Days</code> from the date part of the …\nSubtracts given <code>Months</code> from the current date and time.\nSubtracts given <code>TimeDelta</code> from the current date and time.\nRetrieves the date component with an associated timezone.\nRetrieves the date component.\nMakes a new <code>FixedOffset</code> for the Eastern Hemisphere with …\nMakes a new <code>FixedOffset</code> for the Eastern Hemisphere with …\nFix the offset from UTC to its current value, dropping the …\nFormats the combined date and time per the specified …\nFormats the combined date and time with the specified …\nReturns the argument unchanged.\nConvert this <code>DateTime&lt;FixedOffset&gt;</code> instance into a …\nConvert this <code>DateTime&lt;Utc&gt;</code> instance into a …\nReturns the argument unchanged.\nMakes a new <code>DateTime</code> from a <code>NaiveDateTime</code> in <em>local</em> time …\nMakes a new <code>DateTime</code> from its components: a <code>NaiveDateTime</code> …\nMakes a new <code>DateTime&lt;Utc&gt;</code> from the number of non-leap …\nCreates a new <code>DateTime&lt;Utc&gt;</code> from the number of non-leap …\nMakes a new <code>DateTime&lt;Utc&gt;</code> from the number of non-leap …\nCreates a new <code>DateTime&lt;Utc&gt;</code> from the number of non-leap …\nMakes a new <code>DateTime</code> from its components: a <code>NaiveDateTime</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the number of seconds to add to convert from UTC …\nReturns a view to the naive local datetime.\nReturns a view to the naive UTC datetime.\nRetrieves an associated offset from UTC.\nParses a string from a user-specified format into a …\nParses a string using multiple formats\nParses an RFC 2822 date-and-time string into a …\nParses an RFC 3339 date-and-time string into a …\nParses a string from a user-specified format into a …\nCompare two DateTimes based on their true time, ignoring …\nSubtracts another <code>DateTime</code> from the current date and time. …\nRetrieves the time component.\nReturns the number of non-leap seconds since January 1, …\nReturns the number of non-leap-microseconds since January …\nReturns the number of non-leap-milliseconds since January …\nReturns the number of non-leap-nanoseconds since January …\nReturns the number of non-leap-nanoseconds since January …\nReturns the number of microseconds since the last second …\nReturns the number of milliseconds since the last second …\nReturns the number of nanoseconds since the last second …\nRetrieves an associated time zone.\nReturns an RFC 2822 date and time string such as …\nReturns an RFC 3339 and ISO 8601 date and time string such …\nReturn an RFC 3339 and ISO 8601 date and time string with …\nTurn this <code>DateTime</code> into a <code>DateTime&lt;Utc&gt;</code>, dropping the …\nReturns the number of seconds to add to convert from the …\nMakes a new <code>FixedOffset</code> for the Western Hemisphere with …\nMakes a new <code>FixedOffset</code> for the Western Hemisphere with …\nMakes a new <code>DateTime</code> with the day of month (starting from …\nMakes a new <code>DateTime</code> with the day of month (starting from …\nMakes a new <code>DateTime</code> with the hour number changed.\nMakes a new <code>DateTime</code> with the minute number changed.\nMakes a new <code>DateTime</code> with the month number (starting from …\nMakes a new <code>DateTime</code> with the month number (starting from …\nMakes a new <code>DateTime</code> with nanoseconds since the whole …\nMakes a new <code>DateTime</code> with the day of year (starting from …\nMakes a new <code>DateTime</code> with the day of year (starting from …\nMakes a new <code>DateTime</code> with the second number changed.\nSet the time to a new fixed time on the existing date.\nChanges the associated time zone. The returned <code>DateTime</code> …\nMakes a new <code>DateTime</code> with the year number changed, while …\nRetrieve the elapsed years from now to the given <code>DateTime</code>.")