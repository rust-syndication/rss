(function() {
    var type_impls = Object.fromEntries([["atom_syndication",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CDays%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1731\">source</a><a href=\"#impl-Add%3CDays%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\">Days</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Add <code>Days</code> to <code>NaiveDateTime</code>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if:</p>\n<ul>\n<li>The resulting date would be out of range.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n<p>Strongly consider using <code>DateTime&lt;Tz&gt;::checked_sub_days</code> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1732\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1734\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, days: <a class=\"struct\" href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\">Days</a>) -&gt; &lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\">Days</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Days>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CDuration%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1496\">source</a><a href=\"#impl-Add%3CDuration%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Add <code>std::time::Duration</code> to <code>DateTime</code>.</p>\n<p>As a part of Chrono’s [leap second handling], the addition assumes that <strong>there is no leap\nsecond ever</strong>, except when the <code>NaiveDateTime</code> itself represents a leap  second in which case\nthe assumption becomes that <strong>there is exactly a single leap second ever</strong>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.\nConsider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_add_signed\" title=\"method chrono::datetime::DateTime::checked_add_signed\"><code>DateTime&lt;Tz&gt;::checked_add_signed</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1497\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1500\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Duration>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CFixedOffset%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1551\">source</a><a href=\"#impl-Add%3CFixedOffset%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Add <code>FixedOffset</code> to the datetime value of <code>DateTime</code> (offset remains unchanged).</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1552\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1555\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<FixedOffset>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CMonths%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1575\">source</a><a href=\"#impl-Add%3CMonths%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"chrono/month/struct.Months.html\" title=\"struct chrono::month::Months\">Months</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Add <code>Months</code> to <code>DateTime</code>.</p>\n<p>The result will be clamped to valid days in the resulting month, see <code>checked_add_months</code> for\ndetails.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if:</p>\n<ul>\n<li>The resulting date would be out of range.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n<p>Strongly consider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_add_months\" title=\"method chrono::datetime::DateTime::checked_add_months\"><code>DateTime&lt;Tz&gt;::checked_add_months</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1576\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1578\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"chrono/month/struct.Months.html\" title=\"struct chrono::month::Months\">Months</a>) -&gt; &lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"chrono/month/struct.Months.html\" title=\"struct chrono::month::Months\">Months</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Months>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CTimeDelta%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1477\">source</a><a href=\"#impl-Add%3CTimeDelta%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Add <code>TimeDelta</code> to <code>DateTime</code>.</p>\n<p>As a part of Chrono’s [leap second handling], the addition assumes that <strong>there is no leap\nsecond ever</strong>, except when the <code>NaiveDateTime</code> itself represents a leap  second in which case\nthe assumption becomes that <strong>there is exactly a single leap second ever</strong>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.\nConsider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_add_signed\" title=\"method chrono::datetime::DateTime::checked_add_signed\"><code>DateTime&lt;Tz&gt;::checked_add_signed</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1478\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1481\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<TimeDelta>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CDuration%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1537\">source</a><a href=\"#impl-AddAssign%3CDuration%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Add-assign <code>std::time::Duration</code> to <code>DateTime</code>.</p>\n<p>As a part of Chrono’s [leap second handling], the addition assumes that <strong>there is no leap\nsecond ever</strong>, except when the <code>NaiveDateTime</code> itself represents a leap  second in which case\nthe assumption becomes that <strong>there is exactly a single leap second ever</strong>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.\nConsider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_add_signed\" title=\"method chrono::datetime::DateTime::checked_add_signed\"><code>DateTime&lt;Tz&gt;::checked_add_signed</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1539\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Duration>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CTimeDelta%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1517\">source</a><a href=\"#impl-AddAssign%3CTimeDelta%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Add-assign <code>chrono::Duration</code> to <code>DateTime</code>.</p>\n<p>As a part of Chrono’s [leap second handling], the addition assumes that <strong>there is no leap\nsecond ever</strong>, except when the <code>NaiveDateTime</code> itself represents a leap  second in which case\nthe assumption becomes that <strong>there is exactly a single leap second ever</strong>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.\nConsider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_add_signed\" title=\"method chrono::datetime::DateTime::checked_add_signed\"><code>DateTime&lt;Tz&gt;::checked_add_signed</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1519\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<TimeDelta>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#49\">source</a><a href=\"#impl-Clone-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,\n    &lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#49\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DateTime%3CFixedOffset%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#961\">source</a><a href=\"#impl-DateTime%3CFixedOffset%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_from_rfc2822\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#994\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.parse_from_rfc2822\" class=\"fn\">parse_from_rfc2822</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;, <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an RFC 2822 date-and-time string into a <code>DateTime&lt;FixedOffset&gt;</code> value.</p>\n<p>This parses valid RFC 2822 datetime strings (such as <code>Tue, 1 Jul 2003 10:52:37 +0200</code>)\nand returns a new <a href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\"><code>DateTime</code></a> instance with the parsed timezone as the <a href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\"><code>FixedOffset</code></a>.</p>\n<p>RFC 2822 is the internet message standard that specifies the representation of times in HTTP\nand email headers. It is the 2001 revision of RFC 822, and is itself revised as RFC 5322 in\n2008.</p>\n<h5 id=\"support-for-the-obsolete-date-format\"><a class=\"doc-anchor\" href=\"#support-for-the-obsolete-date-format\">§</a>Support for the obsolete date format</h5>\n<ul>\n<li>A 2-digit year is interpreted to be a year in 1950-2049.</li>\n<li>The standard allows comments and whitespace between many of the tokens. See <a href=\"https://www.rfc-editor.org/rfc/rfc2822#section-4.3\">4.3</a> and\n<a href=\"https://www.rfc-editor.org/rfc/rfc2822#appendix-A.5\">Appendix A.5</a></li>\n<li>Single letter ‘military’ time zone names are parsed as a <code>-0000</code> offset.\nThey were defined with the wrong sign in RFC 822 and corrected in RFC 2822. But because\nthe meaning is now ambiguous, the standard says they should be be considered as <code>-0000</code>\nunless there is out-of-band information confirming their meaning.\nThe exception is <code>Z</code>, which remains identical to <code>+0000</code>.</li>\n</ul>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    DateTime::parse_from_rfc2822(<span class=\"string\">\"Wed, 18 Feb 2015 23:16:09 GMT\"</span>).unwrap(),\n    FixedOffset::east_opt(<span class=\"number\">0</span>).unwrap().with_ymd_and_hms(<span class=\"number\">2015</span>, <span class=\"number\">2</span>, <span class=\"number\">18</span>, <span class=\"number\">23</span>, <span class=\"number\">16</span>, <span class=\"number\">9</span>).unwrap()\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_from_rfc3339\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1014\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.parse_from_rfc3339\" class=\"fn\">parse_from_rfc3339</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;, <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an RFC 3339 date-and-time string into a <code>DateTime&lt;FixedOffset&gt;</code> value.</p>\n<p>Parses all valid RFC 3339 values (as well as the subset of valid ISO 8601 values that are\nalso valid RFC 3339 date-and-time values) and returns a new <a href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\"><code>DateTime</code></a> with a\n<a href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\"><code>FixedOffset</code></a> corresponding to the parsed timezone. While RFC 3339 values come in a wide\nvariety of shapes and sizes, <code>1996-12-19T16:39:57-08:00</code> is an example of the most commonly\nencountered variety of RFC 3339 formats.</p>\n<p>Why isn’t this named <code>parse_from_iso8601</code>? That’s because ISO 8601 allows representing\nvalues in a wide range of formats, only some of which represent actual date-and-time\ninstances (rather than periods, ranges, dates, or times). Some valid ISO 8601 values are\nalso simultaneously valid RFC 3339 values, but not all RFC 3339 values are valid ISO 8601\nvalues (or the other way around).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_from_str\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1052\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.parse_from_str\" class=\"fn\">parse_from_str</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>,\n    fmt: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;, <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string from a user-specified format into a <code>DateTime&lt;FixedOffset&gt;</code> value.</p>\n<p>Note that this method <em>requires a timezone</em> in the input string. See\n<a href=\"./naive/struct.NaiveDateTime.html#method.parse_from_str\"><code>NaiveDateTime::parse_from_str</code></a>\nfor a version that does not require a timezone in the to-be-parsed str. The returned\n<a href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\"><code>DateTime</code></a> value will have a <a href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\"><code>FixedOffset</code></a> reflecting the parsed timezone.</p>\n<p>See the <a href=\"./format/strftime/index.html\"><code>format::strftime</code> module</a> for supported format\nsequences.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::{DateTime, FixedOffset, NaiveDate, TimeZone};\n\n<span class=\"kw\">let </span>dt = DateTime::parse_from_str(<span class=\"string\">\"1983 Apr 13 12:09:14.274 +0000\"</span>, <span class=\"string\">\"%Y %b %d %H:%M:%S%.3f %z\"</span>);\n<span class=\"macro\">assert_eq!</span>(\n    dt,\n    <span class=\"prelude-val\">Ok</span>(FixedOffset::east_opt(<span class=\"number\">0</span>)\n        .unwrap()\n        .from_local_datetime(\n            <span class=\"kw-2\">&amp;</span>NaiveDate::from_ymd_opt(<span class=\"number\">1983</span>, <span class=\"number\">4</span>, <span class=\"number\">13</span>)\n                .unwrap()\n                .and_hms_milli_opt(<span class=\"number\">12</span>, <span class=\"number\">9</span>, <span class=\"number\">14</span>, <span class=\"number\">274</span>)\n                .unwrap()\n        )\n        .unwrap())\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_and_remainder\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1086-1089\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.parse_and_remainder\" class=\"fn\">parse_and_remainder</a>&lt;'a&gt;(\n    s: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>,\n    fmt: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>), <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string from a user-specified format into a <code>DateTime&lt;FixedOffset&gt;</code> value, and a\nslice with the remaining portion of the string.</p>\n<p>Note that this method <em>requires a timezone</em> in the input string. See\n<a href=\"chrono/naive/datetime/struct.NaiveDateTime.html#method.parse_and_remainder\" title=\"associated function chrono::naive::datetime::NaiveDateTime::parse_and_remainder\"><code>NaiveDateTime::parse_and_remainder</code></a> for a version that does not\nrequire a timezone in <code>s</code>. The returned <a href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\"><code>DateTime</code></a> value will have a <a href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\"><code>FixedOffset</code></a>\nreflecting the parsed timezone.</p>\n<p>See the <a href=\"./format/strftime/index.html\"><code>format::strftime</code> module</a> for supported format\nsequences.</p>\n<p>Similar to <a href=\"#method.parse_from_str\"><code>parse_from_str</code></a>.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>(datetime, remainder) = DateTime::parse_and_remainder(\n    <span class=\"string\">\"2015-02-18 23:16:09 +0200 trailing text\"</span>,\n    <span class=\"string\">\"%Y-%m-%d %H:%M:%S %z\"</span>,\n)\n.unwrap();\n<span class=\"macro\">assert_eq!</span>(\n    datetime,\n    FixedOffset::east_opt(<span class=\"number\">2 </span>* <span class=\"number\">3600</span>).unwrap().with_ymd_and_hms(<span class=\"number\">2015</span>, <span class=\"number\">2</span>, <span class=\"number\">18</span>, <span class=\"number\">23</span>, <span class=\"number\">16</span>, <span class=\"number\">9</span>).unwrap()\n);\n<span class=\"macro\">assert_eq!</span>(remainder, <span class=\"string\">\" trailing text\"</span>);</code></pre></div>\n</div></details></div></details>",0,"atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1096-1098\">source</a><a href=\"#impl-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,\n    &lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.format_with_items\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1104-1107\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.format_with_items\" class=\"fn\">format_with_items</a>&lt;'a, I, B&gt;(&amp;self, items: I) -&gt; <a class=\"struct\" href=\"chrono/format/formatting/struct.DelayedFormat.html\" title=\"struct chrono::format::formatting::DelayedFormat\">DelayedFormat</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = B&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"enum\" href=\"chrono/format/enum.Item.html\" title=\"enum chrono::format::Item\">Item</a>&lt;'a&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Formats the combined date and time with the specified formatting items.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.format\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1128\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.format\" class=\"fn\">format</a>&lt;'a&gt;(&amp;self, fmt: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"chrono/format/formatting/struct.DelayedFormat.html\" title=\"struct chrono::format::formatting::DelayedFormat\">DelayedFormat</a>&lt;<a class=\"struct\" href=\"chrono/format/strftime/struct.StrftimeItems.html\" title=\"struct chrono::format::strftime::StrftimeItems\">StrftimeItems</a>&lt;'a&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Formats the combined date and time per the specified format string.</p>\n<p>See the <a href=\"chrono/format/strftime/index.html\" title=\"mod chrono::format::strftime\"><code>crate::format::strftime</code></a> module for the supported escape sequences.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::prelude::<span class=\"kw-2\">*</span>;\n\n<span class=\"kw\">let </span>date_time: DateTime&lt;Utc&gt; = Utc.with_ymd_and_hms(<span class=\"number\">2017</span>, <span class=\"number\">04</span>, <span class=\"number\">02</span>, <span class=\"number\">12</span>, <span class=\"number\">50</span>, <span class=\"number\">32</span>).unwrap();\n<span class=\"kw\">let </span>formatted = <span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, date_time.format(<span class=\"string\">\"%d/%m/%Y %H:%M\"</span>));\n<span class=\"macro\">assert_eq!</span>(formatted, <span class=\"string\">\"02/04/2017 12:50\"</span>);</code></pre></div>\n</div></details></div></details>",0,"atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#68\">source</a><a href=\"#impl-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_naive_utc_and_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#94-97\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.from_naive_utc_and_offset\" class=\"fn\">from_naive_utc_and_offset</a>(\n    datetime: <a class=\"struct\" href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\">NaiveDateTime</a>,\n    offset: &lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>,\n) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> from its components: a <code>NaiveDateTime</code> in UTC and an <code>Offset</code>.</p>\n<p>This is a low-level method, intended for use cases such as deserializing a <code>DateTime</code> or\npassing it through FFI.</p>\n<p>For regular use you will probably want to use a method such as\n<a href=\"chrono/offset/trait.TimeZone.html#method.from_local_datetime\" title=\"method chrono::offset::TimeZone::from_local_datetime\"><code>TimeZone::from_local_datetime</code></a> or <a href=\"chrono/naive/datetime/struct.NaiveDateTime.html#method.and_local_timezone\" title=\"method chrono::naive::datetime::NaiveDateTime::and_local_timezone\"><code>NaiveDateTime::and_local_timezone</code></a> instead.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::{DateTime, Local};\n\n<span class=\"kw\">let </span>dt = Local::now();\n<span class=\"comment\">// Get components\n</span><span class=\"kw\">let </span>naive_utc = dt.naive_utc();\n<span class=\"kw\">let </span>offset = dt.offset().clone();\n<span class=\"comment\">// Serialize, pass through FFI... and recreate the `DateTime`:\n</span><span class=\"kw\">let </span>dt_new = DateTime::&lt;Local&gt;::from_naive_utc_and_offset(naive_utc, offset);\n<span class=\"macro\">assert_eq!</span>(dt, dt_new);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_utc\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#108\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.from_utc\" class=\"fn\">from_utc</a>(\n    datetime: <a class=\"struct\" href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\">NaiveDateTime</a>,\n    offset: &lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>,\n) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.4.27: Use TimeZone::from_utc_datetime() or DateTime::from_naive_utc_and_offset instead</span></div></span></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> from its components: a <code>NaiveDateTime</code> in UTC and an <code>Offset</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_local\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#126\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.from_local\" class=\"fn\">from_local</a>(\n    datetime: <a class=\"struct\" href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\">NaiveDateTime</a>,\n    offset: &lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>,\n) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.4.27: Use TimeZone::from_local_datetime() or NaiveDateTime::and_local_timezone instead</span></div></span></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> from a <code>NaiveDateTime</code> in <em>local</em> time and an <code>Offset</code>.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the local datetime can’t be converted to UTC because it would be out of range.</p>\n<p>This can happen if <code>datetime</code> is near the end of the representable range of <code>NaiveDateTime</code>,\nand the offset from UTC pushes it beyond that.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.date\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#149\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.date\" class=\"fn\">date</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chrono/date/struct.Date.html\" title=\"struct chrono::date::Date\">Date</a>&lt;Tz&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.4.23: Use <code>date_naive()</code> instead</span></div></span></summary><div class=\"docblock\"><p>Retrieves the date component with an associated timezone.</p>\n<p>Unless you are immediately planning on turning this into a <code>DateTime</code>\nwith the same timezone you should use the <a href=\"chrono/datetime/struct.DateTime.html#method.date_naive\" title=\"method chrono::datetime::DateTime::date_naive\"><code>date_naive</code></a> method.</p>\n<p><a href=\"chrono/naive/date/struct.NaiveDate.html\" title=\"struct chrono::naive::date::NaiveDate\"><code>NaiveDate</code></a> is a more well-defined type, and has more traits implemented on it,\nso should be preferred to <a href=\"chrono/date/struct.Date.html\" title=\"struct chrono::date::Date\"><code>Date</code></a> any time you truly want to operate on dates.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p><a href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\"><code>DateTime</code></a> internally stores the date and time in UTC with a <a href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\"><code>NaiveDateTime</code></a>. This\nmethod will panic if the offset from UTC would push the local date outside of the\nrepresentable range of a <a href=\"chrono/date/struct.Date.html\" title=\"struct chrono::date::Date\"><code>Date</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.date_naive\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#173\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.date_naive\" class=\"fn\">date_naive</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chrono/naive/date/struct.NaiveDate.html\" title=\"struct chrono::naive::date::NaiveDate\">NaiveDate</a></h4></section></summary><div class=\"docblock\"><p>Retrieves the date component.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p><a href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\"><code>DateTime</code></a> internally stores the date and time in UTC with a <a href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\"><code>NaiveDateTime</code></a>. This\nmethod will panic if the offset from UTC would push the local date outside of the\nrepresentable range of a <a href=\"chrono/naive/date/struct.NaiveDate.html\" title=\"struct chrono::naive::date::NaiveDate\"><code>NaiveDate</code></a>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::prelude::<span class=\"kw-2\">*</span>;\n\n<span class=\"kw\">let </span>date: DateTime&lt;Utc&gt; = Utc.with_ymd_and_hms(<span class=\"number\">2020</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>).unwrap();\n<span class=\"kw\">let </span>other: DateTime&lt;FixedOffset&gt; =\n    FixedOffset::east_opt(<span class=\"number\">23</span>).unwrap().with_ymd_and_hms(<span class=\"number\">2020</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(date.date_naive(), other.date_naive());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.time\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#180\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.time\" class=\"fn\">time</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chrono/naive/time/struct.NaiveTime.html\" title=\"struct chrono::naive::time::NaiveTime\">NaiveTime</a></h4></section></summary><div class=\"docblock\"><p>Retrieves the time component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timestamp\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#200\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.timestamp\" class=\"fn\">timestamp</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka “UNIX timestamp”).</p>\n<p>The reverse operation of creating a <a href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\"><code>DateTime</code></a> from a timestamp can be performed\nusing <a href=\"chrono/datetime/struct.DateTime.html#method.from_timestamp\" title=\"associated function chrono::datetime::DateTime::from_timestamp\"><code>from_timestamp</code></a> or <a href=\"chrono/offset/trait.TimeZone.html#method.timestamp_opt\" title=\"method chrono::offset::TimeZone::timestamp_opt\"><code>TimeZone::timestamp_opt</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::{DateTime, TimeZone, Utc};\n\n<span class=\"kw\">let </span>dt: DateTime&lt;Utc&gt; = Utc.with_ymd_and_hms(<span class=\"number\">2015</span>, <span class=\"number\">5</span>, <span class=\"number\">15</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp(), <span class=\"number\">1431648000</span>);\n\n<span class=\"macro\">assert_eq!</span>(DateTime::from_timestamp(dt.timestamp(), dt.timestamp_subsec_nanos()).unwrap(), dt);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timestamp_millis\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#231\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.timestamp_millis\" class=\"fn\">timestamp_millis</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of non-leap-milliseconds since January 1, 1970 UTC.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::{NaiveDate, Utc};\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">1970</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>)\n    .unwrap()\n    .and_hms_milli_opt(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">444</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_millis(), <span class=\"number\">1_444</span>);\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">2001</span>, <span class=\"number\">9</span>, <span class=\"number\">9</span>)\n    .unwrap()\n    .and_hms_milli_opt(<span class=\"number\">1</span>, <span class=\"number\">46</span>, <span class=\"number\">40</span>, <span class=\"number\">555</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_millis(), <span class=\"number\">1_000_000_000_555</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timestamp_micros\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#261\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.timestamp_micros\" class=\"fn\">timestamp_micros</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of non-leap-microseconds since January 1, 1970 UTC.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::{NaiveDate, Utc};\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">1970</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>)\n    .unwrap()\n    .and_hms_micro_opt(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">444</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_micros(), <span class=\"number\">1_000_444</span>);\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">2001</span>, <span class=\"number\">9</span>, <span class=\"number\">9</span>)\n    .unwrap()\n    .and_hms_micro_opt(<span class=\"number\">1</span>, <span class=\"number\">46</span>, <span class=\"number\">40</span>, <span class=\"number\">555</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_micros(), <span class=\"number\">1_000_000_000_000_555</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timestamp_nanos\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#278\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.timestamp_nanos\" class=\"fn\">timestamp_nanos</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i64.html\">i64</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.4.31: use <code>timestamp_nanos_opt()</code> instead</span></div></span></summary><div class=\"docblock\"><p>Returns the number of non-leap-nanoseconds since January 1, 1970 UTC.</p>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5>\n<p>An <code>i64</code> with nanosecond precision can span a range of ~584 years. This function panics on\nan out of range <code>DateTime</code>.</p>\n<p>The dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timestamp_nanos_opt\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#350\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.timestamp_nanos_opt\" class=\"fn\">timestamp_nanos_opt</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the number of non-leap-nanoseconds since January 1, 1970 UTC.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>An <code>i64</code> with nanosecond precision can span a range of ~584 years. This function returns\n<code>None</code> on an out of range <code>DateTime</code>.</p>\n<p>The dates that can be represented as nanoseconds are between 1677-09-21T00:12:43.145224192\nand 2262-04-11T23:47:16.854775807.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::{NaiveDate, Utc};\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">1970</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>)\n    .unwrap()\n    .and_hms_nano_opt(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">444</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_nanos_opt(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1_000_000_444</span>));\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">2001</span>, <span class=\"number\">9</span>, <span class=\"number\">9</span>)\n    .unwrap()\n    .and_hms_nano_opt(<span class=\"number\">1</span>, <span class=\"number\">46</span>, <span class=\"number\">40</span>, <span class=\"number\">555</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_nanos_opt(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1_000_000_000_000_000_555</span>));\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">1677</span>, <span class=\"number\">9</span>, <span class=\"number\">21</span>)\n    .unwrap()\n    .and_hms_nano_opt(<span class=\"number\">0</span>, <span class=\"number\">12</span>, <span class=\"number\">43</span>, <span class=\"number\">145_224_192</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_nanos_opt(), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">9_223_372_036_854_775_808</span>));\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">2262</span>, <span class=\"number\">4</span>, <span class=\"number\">11</span>)\n    .unwrap()\n    .and_hms_nano_opt(<span class=\"number\">23</span>, <span class=\"number\">47</span>, <span class=\"number\">16</span>, <span class=\"number\">854_775_807</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_nanos_opt(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9_223_372_036_854_775_807</span>));\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">1677</span>, <span class=\"number\">9</span>, <span class=\"number\">21</span>)\n    .unwrap()\n    .and_hms_nano_opt(<span class=\"number\">0</span>, <span class=\"number\">12</span>, <span class=\"number\">43</span>, <span class=\"number\">145_224_191</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_nanos_opt(), <span class=\"prelude-val\">None</span>);\n\n<span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">2262</span>, <span class=\"number\">4</span>, <span class=\"number\">11</span>)\n    .unwrap()\n    .and_hms_nano_opt(<span class=\"number\">23</span>, <span class=\"number\">47</span>, <span class=\"number\">16</span>, <span class=\"number\">854_775_808</span>)\n    .unwrap()\n    .and_local_timezone(Utc)\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.timestamp_nanos_opt(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timestamp_subsec_millis\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#371\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.timestamp_subsec_millis\" class=\"fn\">timestamp_subsec_millis</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of milliseconds since the last second boundary.</p>\n<p>In event of a leap second this may exceed 999.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timestamp_subsec_micros\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#380\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.timestamp_subsec_micros\" class=\"fn\">timestamp_subsec_micros</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of microseconds since the last second boundary.</p>\n<p>In event of a leap second this may exceed 999,999.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timestamp_subsec_nanos\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#389\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.timestamp_subsec_nanos\" class=\"fn\">timestamp_subsec_nanos</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of nanoseconds since the last second boundary</p>\n<p>In event of a leap second this may exceed 999,999,999.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#396\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.offset\" class=\"fn\">offset</a>(&amp;self) -&gt; &amp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a></h4></section></summary><div class=\"docblock\"><p>Retrieves an associated offset from UTC.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timezone\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#403\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.timezone\" class=\"fn\">timezone</a>(&amp;self) -&gt; Tz</h4></section></summary><div class=\"docblock\"><p>Retrieves an associated time zone.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_timezone\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#412\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.with_timezone\" class=\"fn\">with_timezone</a>&lt;Tz2&gt;(&amp;self, tz: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;Tz2</a>) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz2&gt;<div class=\"where\">where\n    Tz2: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Changes the associated time zone.\nThe returned <code>DateTime</code> references the same instant of time from the perspective of the\nprovided time zone.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fixed_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#420\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.fixed_offset\" class=\"fn\">fixed_offset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Fix the offset from UTC to its current value, dropping the associated timezone information.\nThis it useful for converting a generic <code>DateTime&lt;Tz: Timezone&gt;</code> to <code>DateTime&lt;FixedOffset&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_utc\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#428\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.to_utc\" class=\"fn\">to_utc</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/utc/struct.Utc.html\" title=\"struct chrono::offset::utc::Utc\">Utc</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Turn this <code>DateTime</code> into a <code>DateTime&lt;Utc&gt;</code>, dropping the offset and associated timezone\ninformation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#439\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.checked_add_signed\" class=\"fn\">checked_add_signed</a>(self, rhs: <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds given <code>TimeDelta</code> to the current date and time.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>Returns <code>None</code> if the resulting date would be out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_months\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#459\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.checked_add_months\" class=\"fn\">checked_add_months</a>(self, months: <a class=\"struct\" href=\"chrono/month/struct.Months.html\" title=\"struct chrono::month::Months\">Months</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds given <code>Months</code> to the current date and time.</p>\n<p>Uses the last day of the month if the day does not exist in the resulting month.</p>\n<p>See <a href=\"chrono/naive/date/struct.NaiveDate.html#method.checked_add_months\" title=\"method chrono::naive::date::NaiveDate::checked_add_months\"><code>NaiveDate::checked_add_months</code></a> for more details on behavior.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n<li>The resulting UTC datetime would be out of range.</li>\n<li>The resulting local datetime would be out of range (unless <code>months</code> is zero).</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#476\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.checked_sub_signed\" class=\"fn\">checked_sub_signed</a>(self, rhs: <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Subtracts given <code>TimeDelta</code> from the current date and time.</p>\n<h5 id=\"errors-3\"><a class=\"doc-anchor\" href=\"#errors-3\">§</a>Errors</h5>\n<p>Returns <code>None</code> if the resulting date would be out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub_months\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#496\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.checked_sub_months\" class=\"fn\">checked_sub_months</a>(self, months: <a class=\"struct\" href=\"chrono/month/struct.Months.html\" title=\"struct chrono::month::Months\">Months</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Subtracts given <code>Months</code> from the current date and time.</p>\n<p>Uses the last day of the month if the day does not exist in the resulting month.</p>\n<p>See <a href=\"chrono/naive/date/struct.NaiveDate.html#method.checked_sub_months\" title=\"method chrono::naive::date::NaiveDate::checked_sub_months\"><code>NaiveDate::checked_sub_months</code></a> for more details on behavior.</p>\n<h5 id=\"errors-4\"><a class=\"doc-anchor\" href=\"#errors-4\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n<li>The resulting UTC datetime would be out of range.</li>\n<li>The resulting local datetime would be out of range (unless <code>months</code> is zero).</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_days\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#516\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.checked_add_days\" class=\"fn\">checked_add_days</a>(self, days: <a class=\"struct\" href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\">Days</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Add a duration in <a href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\"><code>Days</code></a> to the date part of the <code>DateTime</code>.</p>\n<h5 id=\"errors-5\"><a class=\"doc-anchor\" href=\"#errors-5\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n<li>The resulting UTC datetime would be out of range.</li>\n<li>The resulting local datetime would be out of range (unless <code>days</code> is zero).</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub_days\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#539\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.checked_sub_days\" class=\"fn\">checked_sub_days</a>(self, days: <a class=\"struct\" href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\">Days</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Subtract a duration in <a href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\"><code>Days</code></a> from the date part of the <code>DateTime</code>.</p>\n<h5 id=\"errors-6\"><a class=\"doc-anchor\" href=\"#errors-6\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n<li>The resulting UTC datetime would be out of range.</li>\n<li>The resulting local datetime would be out of range (unless <code>days</code> is zero).</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_duration_since\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#553-556\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.signed_duration_since\" class=\"fn\">signed_duration_since</a>&lt;Tz2&gt;(\n    self,\n    rhs: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz2&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a><div class=\"where\">where\n    Tz2: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Subtracts another <code>DateTime</code> from the current date and time.\nThis does not overflow or underflow at all.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.naive_utc\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#563\">source</a><h4 class=\"code-header\">pub const fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.naive_utc\" class=\"fn\">naive_utc</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\">NaiveDateTime</a></h4></section></summary><div class=\"docblock\"><p>Returns a view to the naive UTC datetime.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.naive_local\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#576\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.naive_local\" class=\"fn\">naive_local</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\">NaiveDateTime</a></h4></section></summary><div class=\"docblock\"><p>Returns a view to the naive local datetime.</p>\n<h5 id=\"panics-4\"><a class=\"doc-anchor\" href=\"#panics-4\">§</a>Panics</h5>\n<p><a href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\"><code>DateTime</code></a> internally stores the date and time in UTC with a <a href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\"><code>NaiveDateTime</code></a>. This\nmethod will panic if the offset from UTC would push the local datetime outside of the\nrepresentable range of a <a href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\"><code>NaiveDateTime</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.years_since\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#599\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.years_since\" class=\"fn\">years_since</a>(&amp;self, base: <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Retrieve the elapsed years from now to the given <a href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\"><code>DateTime</code></a>.</p>\n<h5 id=\"errors-7\"><a class=\"doc-anchor\" href=\"#errors-7\">§</a>Errors</h5>\n<p>Returns <code>None</code> if <code>base &lt; self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_rfc2822\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#623\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.to_rfc2822\" class=\"fn\">to_rfc2822</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Returns an RFC 2822 date and time string such as <code>Tue, 1 Jul 2003 10:52:37 +0200</code>.</p>\n<h5 id=\"panics-5\"><a class=\"doc-anchor\" href=\"#panics-5\">§</a>Panics</h5>\n<p>Panics if the date can not be represented in this format: the year may not be negative and\ncan not have more than 4 digits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_rfc3339\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#633\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.to_rfc3339\" class=\"fn\">to_rfc3339</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Returns an RFC 3339 and ISO 8601 date and time string such as <code>1996-12-19T16:39:57-08:00</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_rfc3339_opts\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#676\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.to_rfc3339_opts\" class=\"fn\">to_rfc3339_opts</a>(&amp;self, secform: <a class=\"enum\" href=\"chrono/format/formatting/enum.SecondsFormat.html\" title=\"enum chrono::format::formatting::SecondsFormat\">SecondsFormat</a>, use_z: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Return an RFC 3339 and ISO 8601 date and time string with subseconds\nformatted as per <code>SecondsFormat</code>.</p>\n<p>If <code>use_z</code> is true and the timezone is UTC (offset 0), uses <code>Z</code> as\nper <a href=\"chrono/format/enum.Fixed.html#variant.TimezoneOffsetColonZ\" title=\"variant chrono::format::Fixed::TimezoneOffsetColonZ\"><code>Fixed::TimezoneOffsetColonZ</code></a>. If <code>use_z</code> is false, uses\n<a href=\"chrono/format/enum.Fixed.html#variant.TimezoneOffsetColon\" title=\"variant chrono::format::Fixed::TimezoneOffsetColon\"><code>Fixed::TimezoneOffsetColon</code></a></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>dt = NaiveDate::from_ymd_opt(<span class=\"number\">2018</span>, <span class=\"number\">1</span>, <span class=\"number\">26</span>)\n    .unwrap()\n    .and_hms_micro_opt(<span class=\"number\">18</span>, <span class=\"number\">30</span>, <span class=\"number\">9</span>, <span class=\"number\">453_829</span>)\n    .unwrap()\n    .and_utc();\n<span class=\"macro\">assert_eq!</span>(dt.to_rfc3339_opts(SecondsFormat::Millis, <span class=\"bool-val\">false</span>), <span class=\"string\">\"2018-01-26T18:30:09.453+00:00\"</span>);\n<span class=\"macro\">assert_eq!</span>(dt.to_rfc3339_opts(SecondsFormat::Millis, <span class=\"bool-val\">true</span>), <span class=\"string\">\"2018-01-26T18:30:09.453Z\"</span>);\n<span class=\"macro\">assert_eq!</span>(dt.to_rfc3339_opts(SecondsFormat::Secs, <span class=\"bool-val\">true</span>), <span class=\"string\">\"2018-01-26T18:30:09Z\"</span>);\n\n<span class=\"kw\">let </span>pst = FixedOffset::east_opt(<span class=\"number\">8 </span>* <span class=\"number\">60 </span>* <span class=\"number\">60</span>).unwrap();\n<span class=\"kw\">let </span>dt = pst\n    .from_local_datetime(\n        <span class=\"kw-2\">&amp;</span>NaiveDate::from_ymd_opt(<span class=\"number\">2018</span>, <span class=\"number\">1</span>, <span class=\"number\">26</span>)\n            .unwrap()\n            .and_hms_micro_opt(<span class=\"number\">10</span>, <span class=\"number\">30</span>, <span class=\"number\">9</span>, <span class=\"number\">453_829</span>)\n            .unwrap(),\n    )\n    .unwrap();\n<span class=\"macro\">assert_eq!</span>(dt.to_rfc3339_opts(SecondsFormat::Secs, <span class=\"bool-val\">true</span>), <span class=\"string\">\"2018-01-26T10:30:09+08:00\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_time\" class=\"method\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#705\">source</a><h4 class=\"code-header\">pub fn <a href=\"chrono/datetime/struct.DateTime.html#tymethod.with_time\" class=\"fn\">with_time</a>(&amp;self, time: <a class=\"struct\" href=\"chrono/naive/time/struct.NaiveTime.html\" title=\"struct chrono::naive::time::NaiveTime\">NaiveTime</a>) -&gt; <a class=\"enum\" href=\"chrono/offset/enum.LocalResult.html\" title=\"enum chrono::offset::LocalResult\">LocalResult</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Set the time to a new fixed time on the existing date.</p>\n<h5 id=\"errors-8\"><a class=\"doc-anchor\" href=\"#errors-8\">§</a>Errors</h5>\n<p>Returns <code>LocalResult::None</code> if the datetime is at the edge of the representable range for a\n<code>DateTime</code>, and <code>with_time</code> would push the value in UTC out of range.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::{Local, NaiveTime};\n\n<span class=\"kw\">let </span>noon = NaiveTime::from_hms_opt(<span class=\"number\">12</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>).unwrap();\n<span class=\"kw\">let </span>today_noon = Local::now().with_time(noon);\n<span class=\"kw\">let </span>today_midnight = Local::now().with_time(NaiveTime::MIN);\n\n<span class=\"macro\">assert_eq!</span>(today_noon.single().unwrap().time(), noon);\n<span class=\"macro\">assert_eq!</span>(today_midnight.single().unwrap().time(), NaiveTime::MIN);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_UTC\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#710\">source</a><h4 class=\"code-header\">pub const <a href=\"chrono/datetime/struct.DateTime.html#associatedconstant.MIN_UTC\" class=\"constant\">MIN_UTC</a>: <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/utc/struct.Utc.html\" title=\"struct chrono::offset::utc::Utc\">Utc</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The minimum possible <code>DateTime&lt;Utc&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_UTC\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#712\">source</a><h4 class=\"code-header\">pub const <a href=\"chrono/datetime/struct.DateTime.html#associatedconstant.MAX_UTC\" class=\"constant\">MAX_UTC</a>: <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/utc/struct.Utc.html\" title=\"struct chrono::offset::utc::Utc\">Utc</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The maximum possible <code>DateTime&lt;Utc&gt;</code>.</p>\n</div></details></div></details>",0,"atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Datelike-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1172\">source</a><a href=\"#impl-Datelike-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"chrono/traits/trait.Datelike.html\" title=\"trait chrono::traits::Datelike\">Datelike</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_year\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1223\">source</a><a href=\"#method.with_year\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.with_year\" class=\"fn\">with_year</a>(&amp;self, year: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the year number changed, while keeping the same month and day.</p>\n<p>See also the <a href=\"chrono/naive/date/struct.NaiveDate.html#method.with_year\" title=\"method chrono::naive::date::NaiveDate::with_year\"><code>NaiveDate::with_year</code></a> method.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The resulting date does not exist (February 29 in a non-leap year).</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n<li>The resulting UTC datetime would be out of range.</li>\n<li>The resulting local datetime would be out of range (unless the year remains the same).</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_month\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1244\">source</a><a href=\"#method.with_month\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.with_month\" class=\"fn\">with_month</a>(&amp;self, month: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the month number (starting from 1) changed.</p>\n<p>Don’t combine multiple <code>Datelike::with_*</code> methods. The intermediate value may not exist.</p>\n<p>See also the <a href=\"chrono/naive/date/struct.NaiveDate.html#method.with_month\" title=\"method chrono::naive::date::NaiveDate::with_month\"><code>NaiveDate::with_month</code></a> method.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The resulting date does not exist (for example <code>month(4)</code> when day of the month is 31).</li>\n<li>The value for <code>month</code> is invalid.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_month0\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1260\">source</a><a href=\"#method.with_month0\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.with_month0\" class=\"fn\">with_month0</a>(&amp;self, month0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the month number (starting from 0) changed.</p>\n<p>See also the <a href=\"chrono/naive/date/struct.NaiveDate.html#method.with_month0\" title=\"method chrono::naive::date::NaiveDate::with_month0\"><code>NaiveDate::with_month0</code></a> method.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The resulting date does not exist (for example <code>month0(3)</code> when day of the month is 31).</li>\n<li>The value for <code>month0</code> is invalid.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_day\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1276\">source</a><a href=\"#method.with_day\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.with_day\" class=\"fn\">with_day</a>(&amp;self, day: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the day of month (starting from 1) changed.</p>\n<p>See also the <a href=\"chrono/naive/date/struct.NaiveDate.html#method.with_day\" title=\"method chrono::naive::date::NaiveDate::with_day\"><code>NaiveDate::with_day</code></a> method.</p>\n<h5 id=\"errors-3\"><a class=\"doc-anchor\" href=\"#errors-3\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The resulting date does not exist (for example <code>day(31)</code> in April).</li>\n<li>The value for <code>day</code> is invalid.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_day0\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1292\">source</a><a href=\"#method.with_day0\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.with_day0\" class=\"fn\">with_day0</a>(&amp;self, day0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the day of month (starting from 0) changed.</p>\n<p>See also the <a href=\"chrono/naive/date/struct.NaiveDate.html#method.with_day0\" title=\"method chrono::naive::date::NaiveDate::with_day0\"><code>NaiveDate::with_day0</code></a> method.</p>\n<h5 id=\"errors-4\"><a class=\"doc-anchor\" href=\"#errors-4\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The resulting date does not exist (for example <code>day(30)</code> in April).</li>\n<li>The value for <code>day0</code> is invalid.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_ordinal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1308\">source</a><a href=\"#method.with_ordinal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.with_ordinal\" class=\"fn\">with_ordinal</a>(&amp;self, ordinal: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the day of year (starting from 1) changed.</p>\n<p>See also the <a href=\"chrono/naive/date/struct.NaiveDate.html#method.with_ordinal\" title=\"method chrono::naive::date::NaiveDate::with_ordinal\"><code>NaiveDate::with_ordinal</code></a> method.</p>\n<h5 id=\"errors-5\"><a class=\"doc-anchor\" href=\"#errors-5\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The resulting date does not exist (<code>with_ordinal(366)</code> in a non-leap year).</li>\n<li>The value for <code>ordinal</code> is invalid.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_ordinal0\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1324\">source</a><a href=\"#method.with_ordinal0\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.with_ordinal0\" class=\"fn\">with_ordinal0</a>(&amp;self, ordinal0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the day of year (starting from 0) changed.</p>\n<p>See also the <a href=\"chrono/naive/date/struct.NaiveDate.html#method.with_ordinal0\" title=\"method chrono::naive::date::NaiveDate::with_ordinal0\"><code>NaiveDate::with_ordinal0</code></a> method.</p>\n<h5 id=\"errors-6\"><a class=\"doc-anchor\" href=\"#errors-6\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The resulting date does not exist (<code>with_ordinal0(365)</code> in a non-leap year).</li>\n<li>The value for <code>ordinal0</code> is invalid.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.year\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1174\">source</a><a href=\"#method.year\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.year\" class=\"fn\">year</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the year number in the <a href=\"./naive/struct.NaiveDate.html#calendar-date\">calendar date</a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.month\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1178\">source</a><a href=\"#method.month\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.month\" class=\"fn\">month</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the month number starting from 1. <a href=\"chrono/traits/trait.Datelike.html#tymethod.month\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.month0\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1182\">source</a><a href=\"#method.month0\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.month0\" class=\"fn\">month0</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the month number starting from 0. <a href=\"chrono/traits/trait.Datelike.html#tymethod.month0\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.day\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1186\">source</a><a href=\"#method.day\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.day\" class=\"fn\">day</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the day of month starting from 1. <a href=\"chrono/traits/trait.Datelike.html#tymethod.day\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.day0\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1190\">source</a><a href=\"#method.day0\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.day0\" class=\"fn\">day0</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the day of month starting from 0. <a href=\"chrono/traits/trait.Datelike.html#tymethod.day0\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ordinal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1194\">source</a><a href=\"#method.ordinal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.ordinal\" class=\"fn\">ordinal</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the day of year starting from 1. <a href=\"chrono/traits/trait.Datelike.html#tymethod.ordinal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ordinal0\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1198\">source</a><a href=\"#method.ordinal0\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.ordinal0\" class=\"fn\">ordinal0</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the day of year starting from 0. <a href=\"chrono/traits/trait.Datelike.html#tymethod.ordinal0\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.weekday\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1202\">source</a><a href=\"#method.weekday\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.weekday\" class=\"fn\">weekday</a>(&amp;self) -&gt; <a class=\"enum\" href=\"chrono/weekday/enum.Weekday.html\" title=\"enum chrono::weekday::Weekday\">Weekday</a></h4></section></summary><div class='docblock'>Returns the day of week.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iso_week\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1206\">source</a><a href=\"#method.iso_week\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#tymethod.iso_week\" class=\"fn\">iso_week</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chrono/naive/isoweek/struct.IsoWeek.html\" title=\"struct chrono::naive::isoweek::IsoWeek\">IsoWeek</a></h4></section></summary><div class='docblock'>Returns the ISO week.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.year_ce\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/traits.rs.html#38\">source</a><a href=\"#method.year_ce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#method.year_ce\" class=\"fn\">year_ce</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_days_from_ce\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/traits.rs.html#248\">source</a><a href=\"#method.num_days_from_ce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Datelike.html#method.num_days_from_ce\" class=\"fn\">num_days_from_ce</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1. <a href=\"chrono/traits/trait.Datelike.html#method.num_days_from_ce\">Read more</a></div></details></div></details>","Datelike","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1757\">source</a><a href=\"#impl-Debug-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1758\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-DateTime%3CFixedOffset%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#877\">source</a><a href=\"#impl-Default-for-DateTime%3CFixedOffset%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#878\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.82.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1789-1791\">source</a><a href=\"#impl-Display-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,\n    &lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1793\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DurationRound-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/round.rs.html#158\">source</a><a href=\"#impl-DurationRound-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"chrono/round/trait.DurationRound.html\" title=\"trait chrono::round::DurationRound\">DurationRound</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/round.rs.html#159\">source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"chrono/round/trait.DurationRound.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"chrono/round/enum.RoundingError.html\" title=\"enum chrono::round::RoundingError\">RoundingError</a></h4></section></summary><div class='docblock'>Error that can occur in rounding or truncating</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.duration_round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/round.rs.html#161\">source</a><a href=\"#method.duration_round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/round/trait.DurationRound.html#tymethod.duration_round\" class=\"fn\">duration_round</a>(\n    self,\n    duration: <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;, &lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt; as <a class=\"trait\" href=\"chrono/round/trait.DurationRound.html\" title=\"trait chrono::round::DurationRound\">DurationRound</a>&gt;::<a class=\"associatedtype\" href=\"chrono/round/trait.DurationRound.html#associatedtype.Err\" title=\"type chrono::round::DurationRound::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Return a copy rounded by TimeDelta. <a href=\"chrono/round/trait.DurationRound.html#tymethod.duration_round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.duration_trunc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/round.rs.html#165\">source</a><a href=\"#method.duration_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/round/trait.DurationRound.html#tymethod.duration_trunc\" class=\"fn\">duration_trunc</a>(\n    self,\n    duration: <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;, &lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt; as <a class=\"trait\" href=\"chrono/round/trait.DurationRound.html\" title=\"trait chrono::round::DurationRound\">DurationRound</a>&gt;::<a class=\"associatedtype\" href=\"chrono/round/trait.DurationRound.html#associatedtype.Err\" title=\"type chrono::round::DurationRound::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Return a copy truncated by TimeDelta. <a href=\"chrono/round/trait.DurationRound.html#tymethod.duration_trunc\">Read more</a></div></details></div></details>","DurationRound","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDateTime%3CUtc%3E%3E-for-DateTime%3CFixedOffset%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#884\">source</a><a href=\"#impl-From%3CDateTime%3CUtc%3E%3E-for-DateTime%3CFixedOffset%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/utc/struct.Utc.html\" title=\"struct chrono::offset::utc::Utc\">Utc</a>&gt;&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;</h3></section></summary><div class=\"docblock\"><p>Convert a <code>DateTime&lt;Utc&gt;</code> instance into a <code>DateTime&lt;FixedOffset&gt;</code> instance.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#889\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/utc/struct.Utc.html\" title=\"struct chrono::offset::utc::Utc\">Utc</a>&gt;) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this <code>DateTime&lt;Utc&gt;</code> instance into a <code>DateTime&lt;FixedOffset&gt;</code> instance.</p>\n<p>Conversion is done via <a href=\"chrono/datetime/struct.DateTime.html#method.with_timezone\" title=\"method chrono::datetime::DateTime::with_timezone\"><code>DateTime::with_timezone</code></a>. Note that the converted value returned by\nthis will be created with a fixed timezone offset of 0.</p>\n</div></details></div></details>","From<DateTime<Utc>>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-DateTime%3CFixedOffset%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/format/parse.rs.html#523\">source</a><a href=\"#impl-FromStr-for-DateTime%3CFixedOffset%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;</h3></section></summary><div class=\"docblock\"><p>Accepts a relaxed form of RFC3339.\nA space or a ‘T’ are acepted as the separator between the date and time\nparts. Additional spaces are allowed between each component.</p>\n<p>All of these examples are equivalent:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"string\">\"2012-12-12T12:12:12Z\"</span>.parse::&lt;DateTime&lt;FixedOffset&gt;&gt;()<span class=\"question-mark\">?</span>;\n<span class=\"string\">\"2012-12-12 12:12:12Z\"</span>.parse::&lt;DateTime&lt;FixedOffset&gt;&gt;()<span class=\"question-mark\">?</span>;\n<span class=\"string\">\"2012-  12-12T12:  12:12Z\"</span>.parse::&lt;DateTime&lt;FixedOffset&gt;&gt;()<span class=\"question-mark\">?</span>;</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/format/parse.rs.html#524\">source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/format/parse.rs.html#526\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt;, <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.82.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1461\">source</a><a href=\"#impl-Hash-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1462\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1455\">source</a><a href=\"#impl-Ord-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1456\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/cmp.rs.html#854-856\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/cmp.rs.html#875-877\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/cmp.rs.html#901-904\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CDateTime%3CTz2%3E%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1420\">source</a><a href=\"#impl-PartialEq%3CDateTime%3CTz2%3E%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz, Tz2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz2&gt;&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,\n    Tz2: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1421\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<DateTime<Tz2>>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CDateTime%3CTz2%3E%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1428\">source</a><a href=\"#impl-PartialOrd%3CDateTime%3CTz2%3E%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz, Tz2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz2&gt;&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,\n    Tz2: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1450\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz2&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Compare two DateTimes based on their true time, ignoring time zones</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>chrono::prelude::<span class=\"kw-2\">*</span>;\n\n<span class=\"kw\">let </span>earlier = Utc\n    .with_ymd_and_hms(<span class=\"number\">2015</span>, <span class=\"number\">5</span>, <span class=\"number\">15</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)\n    .unwrap()\n    .with_timezone(<span class=\"kw-2\">&amp;</span>FixedOffset::west_opt(<span class=\"number\">1 </span>* <span class=\"number\">3600</span>).unwrap());\n<span class=\"kw\">let </span>later = Utc\n    .with_ymd_and_hms(<span class=\"number\">2015</span>, <span class=\"number\">5</span>, <span class=\"number\">15</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)\n    .unwrap()\n    .with_timezone(<span class=\"kw-2\">&amp;</span>FixedOffset::west_opt(<span class=\"number\">5 </span>* <span class=\"number\">3600</span>).unwrap());\n\n<span class=\"macro\">assert_eq!</span>(earlier.to_string(), <span class=\"string\">\"2015-05-15 01:00:00 -01:00\"</span>);\n<span class=\"macro\">assert_eq!</span>(later.to_string(), <span class=\"string\">\"2015-05-14 22:00:00 -05:00\"</span>);\n\n<span class=\"macro\">assert!</span>(later &gt; earlier);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/cmp.rs.html#1178\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/cmp.rs.html#1196\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<DateTime<Tz2>>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26DateTime%3CTz%3E%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1712\">source</a><a href=\"#impl-Sub%3C%26DateTime%3CTz%3E%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1713\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1716\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;) -&gt; <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&DateTime<Tz>>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CDays%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1749\">source</a><a href=\"#impl-Sub%3CDays%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\">Days</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Subtract <code>Days</code> from <code>DateTime</code>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if:</p>\n<ul>\n<li>The resulting date would be out of range.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n<p>Strongly consider using <code>DateTime&lt;Tz&gt;::checked_sub_days</code> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1750\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1752\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, days: <a class=\"struct\" href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\">Days</a>) -&gt; &lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"chrono/naive/struct.Days.html\" title=\"struct chrono::naive::Days\">Days</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Days>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CDuration%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1614\">source</a><a href=\"#impl-Sub%3CDuration%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Subtract <code>std::time::Duration</code> from <code>DateTime</code>.</p>\n<p>As a part of Chrono’s [leap second handling] the subtraction assumes that <strong>there is no leap\nsecond ever</strong>, except when the <code>DateTime</code> itself represents a leap second in which case\nthe assumption becomes that <strong>there is exactly a single leap second ever</strong>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.\nConsider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_sub_signed\" title=\"method chrono::datetime::DateTime::checked_sub_signed\"><code>DateTime&lt;Tz&gt;::checked_sub_signed</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1615\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1618\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Duration>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CFixedOffset%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1671\">source</a><a href=\"#impl-Sub%3CFixedOffset%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Subtract <code>FixedOffset</code> from the datetime value of <code>DateTime</code> (offset remains unchanged).</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1672\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1675\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"chrono/offset/fixed/struct.FixedOffset.html\" title=\"struct chrono::offset::fixed::FixedOffset\">FixedOffset</a>) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<FixedOffset>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CMonths%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1695\">source</a><a href=\"#impl-Sub%3CMonths%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"chrono/month/struct.Months.html\" title=\"struct chrono::month::Months\">Months</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Subtract <code>Months</code> from <code>DateTime</code>.</p>\n<p>The result will be clamped to valid days in the resulting month, see\n<a href=\"chrono/datetime/struct.DateTime.html#method.checked_sub_months\" title=\"method chrono::datetime::DateTime::checked_sub_months\"><code>DateTime&lt;Tz&gt;::checked_sub_months</code></a> for details.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if:</p>\n<ul>\n<li>The resulting date would be out of range.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n<p>Strongly consider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_sub_months\" title=\"method chrono::datetime::DateTime::checked_sub_months\"><code>DateTime&lt;Tz&gt;::checked_sub_months</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1696\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1698\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"chrono/month/struct.Months.html\" title=\"struct chrono::month::Months\">Months</a>) -&gt; &lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"chrono/month/struct.Months.html\" title=\"struct chrono::month::Months\">Months</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Months>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CTimeDelta%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1595\">source</a><a href=\"#impl-Sub%3CTimeDelta%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Subtract <code>TimeDelta</code> from <code>DateTime</code>.</p>\n<p>This is the same as the addition with a negated <code>TimeDelta</code>.</p>\n<p>As a part of Chrono’s [leap second handling] the subtraction assumes that <strong>there is no leap\nsecond ever</strong>, except when the <code>DateTime</code> itself represents a leap second in which case\nthe assumption becomes that <strong>there is exactly a single leap second ever</strong>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.\nConsider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_sub_signed\" title=\"method chrono::datetime::DateTime::checked_sub_signed\"><code>DateTime&lt;Tz&gt;::checked_sub_signed</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1596\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1599\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>) -&gt; <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<TimeDelta>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1703\">source</a><a href=\"#impl-Sub-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1704\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1707\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;) -&gt; <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CDuration%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1657\">source</a><a href=\"#impl-SubAssign%3CDuration%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Subtract-assign <code>std::time::Duration</code> from <code>DateTime</code>.</p>\n<p>As a part of Chrono’s [leap second handling], the addition assumes that <strong>there is no leap\nsecond ever</strong>, except when the <code>DateTime</code> itself represents a leap  second in which case\nthe assumption becomes that <strong>there is exactly a single leap second ever</strong>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.\nConsider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_sub_signed\" title=\"method chrono::datetime::DateTime::checked_sub_signed\"><code>DateTime&lt;Tz&gt;::checked_sub_signed</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1659\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Duration>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CTimeDelta%3E-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1637\">source</a><a href=\"#impl-SubAssign%3CTimeDelta%3E-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>&gt; for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"docblock\"><p>Subtract-assign <code>TimeDelta</code> from <code>DateTime</code>.</p>\n<p>This is the same as the addition with a negated <code>TimeDelta</code>.</p>\n<p>As a part of Chrono’s [leap second handling], the addition assumes that <strong>there is no leap\nsecond ever</strong>, except when the <code>DateTime</code> itself represents a leap  second in which case\nthe assumption becomes that <strong>there is exactly a single leap second ever</strong>.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if the resulting date would be out of range.\nConsider using <a href=\"chrono/datetime/struct.DateTime.html#method.checked_sub_signed\" title=\"method chrono::datetime::DateTime::checked_sub_signed\"><code>DateTime&lt;Tz&gt;::checked_sub_signed</code></a> to get an <code>Option</code> instead.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1639\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"chrono/time_delta/struct.TimeDelta.html\" title=\"struct chrono::time_delta::TimeDelta\">TimeDelta</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<TimeDelta>","atom_syndication::util::FixedDateTime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Timelike-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1329\">source</a><a href=\"#impl-Timelike-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"chrono/traits/trait.Timelike.html\" title=\"trait chrono::traits::Timelike\">Timelike</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hour\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1358\">source</a><a href=\"#method.with_hour\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#tymethod.with_hour\" class=\"fn\">with_hour</a>(&amp;self, hour: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the hour number changed.</p>\n<p>See also the <a href=\"chrono/naive/time/struct.NaiveTime.html#method.with_hour\" title=\"method chrono::naive::time::NaiveTime::with_hour\"><code>NaiveTime::with_hour</code></a> method.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The value for <code>hour</code> is invalid.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_minute\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1372\">source</a><a href=\"#method.with_minute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#tymethod.with_minute\" class=\"fn\">with_minute</a>(&amp;self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the minute number changed.</p>\n<p>See also the <a href=\"chrono/naive/time/struct.NaiveTime.html#method.with_minute\" title=\"method chrono::naive::time::NaiveTime::with_minute\"><code>NaiveTime::with_minute</code></a> method.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<ul>\n<li>The value for <code>minute</code> is invalid.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_second\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1390\">source</a><a href=\"#method.with_second\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#tymethod.with_second\" class=\"fn\">with_second</a>(&amp;self, sec: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with the second number changed.</p>\n<p>As with the <a href=\"#method.second\"><code>second</code></a> method,\nthe input range is restricted to 0 through 59.</p>\n<p>See also the <a href=\"chrono/naive/time/struct.NaiveTime.html#method.with_second\" title=\"method chrono::naive::time::NaiveTime::with_second\"><code>NaiveTime::with_second</code></a> method.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>Returns <code>None</code> if:</p>\n<ul>\n<li>The value for <code>second</code> is invalid.</li>\n<li>The local time at the resulting date does not exist or is ambiguous, for example during a\ndaylight saving time transition.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_nanosecond\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1406\">source</a><a href=\"#method.with_nanosecond\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#tymethod.with_nanosecond\" class=\"fn\">with_nanosecond</a>(&amp;self, nano: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a new <code>DateTime</code> with nanoseconds since the whole non-leap second changed.</p>\n<p>Returns <code>None</code> when the resulting <code>NaiveDateTime</code> would be invalid.\nAs with the <a href=\"chrono/naive/datetime/struct.NaiveDateTime.html#method.nanosecond\" title=\"method chrono::naive::datetime::NaiveDateTime::nanosecond\"><code>NaiveDateTime::nanosecond</code></a> method,\nthe input range can exceed 1,000,000,000 for leap seconds.</p>\n<p>See also the <a href=\"chrono/naive/time/struct.NaiveTime.html#method.with_nanosecond\" title=\"method chrono::naive::time::NaiveTime::with_nanosecond\"><code>NaiveTime::with_nanosecond</code></a> method.</p>\n<h5 id=\"errors-3\"><a class=\"doc-anchor\" href=\"#errors-3\">§</a>Errors</h5>\n<p>Returns <code>None</code> if <code>nanosecond &gt;= 2,000,000,000</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hour\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1331\">source</a><a href=\"#method.hour\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#tymethod.hour\" class=\"fn\">hour</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the hour number from 0 to 23.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.minute\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1335\">source</a><a href=\"#method.minute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#tymethod.minute\" class=\"fn\">minute</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the minute number from 0 to 59.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.second\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1339\">source</a><a href=\"#method.second\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#tymethod.second\" class=\"fn\">second</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the second number from 0 to 59.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nanosecond\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1343\">source</a><a href=\"#method.nanosecond\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#tymethod.nanosecond\" class=\"fn\">nanosecond</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe <a href=\"./naive/struct.NaiveTime.html#leap-second-handling\">leap second</a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hour12\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/traits.rs.html#274\">source</a><a href=\"#method.hour12\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#method.hour12\" class=\"fn\">hour12</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_seconds_from_midnight\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chrono/traits.rs.html#325\">source</a><a href=\"#method.num_seconds_from_midnight\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"chrono/traits/trait.Timelike.html#method.num_seconds_from_midnight\" class=\"fn\">num_seconds_from_midnight</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of non-leap seconds past the last midnight. <a href=\"chrono/traits/trait.Timelike.html#method.num_seconds_from_midnight\">Read more</a></div></details></div></details>","Timelike","atom_syndication::util::FixedDateTime"],["<section id=\"impl-Copy-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1413-1416\">source</a><a href=\"#impl-Copy-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,\n    &lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    <a class=\"struct\" href=\"chrono/naive/datetime/struct.NaiveDateTime.html\" title=\"struct chrono::naive::datetime::NaiveDateTime\">NaiveDateTime</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","atom_syndication::util::FixedDateTime"],["<section id=\"impl-Eq-for-DateTime%3CTz%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chrono/datetime/mod.rs.html#1426\">source</a><a href=\"#impl-Eq-for-DateTime%3CTz%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tz&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;Tz&gt;<div class=\"where\">where\n    Tz: <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>,</div></h3></section>","Eq","atom_syndication::util::FixedDateTime"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[186165]}